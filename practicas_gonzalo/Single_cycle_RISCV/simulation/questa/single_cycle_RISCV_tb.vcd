$date
	Mon Jun  2 16:47:46 2025
$end
$version
	Questa Intel Starter FPGA Edition Version 2023.3
$end
$timescale
	1ps
$end

$scope module single_cycle_RISCV_tb $end
$var reg 1 ! clk $end
$var reg 1 " rst $end

$scope module top $end
$var parameter 32 # DATA_WIDTH $end
$var parameter 32 $ ADDR_WIDTH $end
$var wire 1 % clk $end
$var wire 1 & rst $end
$var reg 32 ' PC [31:0] $end
$var wire 1 ( PC_plus_4 [31] $end
$var wire 1 ) PC_plus_4 [30] $end
$var wire 1 * PC_plus_4 [29] $end
$var wire 1 + PC_plus_4 [28] $end
$var wire 1 , PC_plus_4 [27] $end
$var wire 1 - PC_plus_4 [26] $end
$var wire 1 . PC_plus_4 [25] $end
$var wire 1 / PC_plus_4 [24] $end
$var wire 1 0 PC_plus_4 [23] $end
$var wire 1 1 PC_plus_4 [22] $end
$var wire 1 2 PC_plus_4 [21] $end
$var wire 1 3 PC_plus_4 [20] $end
$var wire 1 4 PC_plus_4 [19] $end
$var wire 1 5 PC_plus_4 [18] $end
$var wire 1 6 PC_plus_4 [17] $end
$var wire 1 7 PC_plus_4 [16] $end
$var wire 1 8 PC_plus_4 [15] $end
$var wire 1 9 PC_plus_4 [14] $end
$var wire 1 : PC_plus_4 [13] $end
$var wire 1 ; PC_plus_4 [12] $end
$var wire 1 < PC_plus_4 [11] $end
$var wire 1 = PC_plus_4 [10] $end
$var wire 1 > PC_plus_4 [9] $end
$var wire 1 ? PC_plus_4 [8] $end
$var wire 1 @ PC_plus_4 [7] $end
$var wire 1 A PC_plus_4 [6] $end
$var wire 1 B PC_plus_4 [5] $end
$var wire 1 C PC_plus_4 [4] $end
$var wire 1 D PC_plus_4 [3] $end
$var wire 1 E PC_plus_4 [2] $end
$var wire 1 F PC_plus_4 [1] $end
$var wire 1 G PC_plus_4 [0] $end
$var wire 1 H PC_target [31] $end
$var wire 1 I PC_target [30] $end
$var wire 1 J PC_target [29] $end
$var wire 1 K PC_target [28] $end
$var wire 1 L PC_target [27] $end
$var wire 1 M PC_target [26] $end
$var wire 1 N PC_target [25] $end
$var wire 1 O PC_target [24] $end
$var wire 1 P PC_target [23] $end
$var wire 1 Q PC_target [22] $end
$var wire 1 R PC_target [21] $end
$var wire 1 S PC_target [20] $end
$var wire 1 T PC_target [19] $end
$var wire 1 U PC_target [18] $end
$var wire 1 V PC_target [17] $end
$var wire 1 W PC_target [16] $end
$var wire 1 X PC_target [15] $end
$var wire 1 Y PC_target [14] $end
$var wire 1 Z PC_target [13] $end
$var wire 1 [ PC_target [12] $end
$var wire 1 \ PC_target [11] $end
$var wire 1 ] PC_target [10] $end
$var wire 1 ^ PC_target [9] $end
$var wire 1 _ PC_target [8] $end
$var wire 1 ` PC_target [7] $end
$var wire 1 a PC_target [6] $end
$var wire 1 b PC_target [5] $end
$var wire 1 c PC_target [4] $end
$var wire 1 d PC_target [3] $end
$var wire 1 e PC_target [2] $end
$var wire 1 f PC_target [1] $end
$var wire 1 g PC_target [0] $end
$var wire 1 h PC_next [31] $end
$var wire 1 i PC_next [30] $end
$var wire 1 j PC_next [29] $end
$var wire 1 k PC_next [28] $end
$var wire 1 l PC_next [27] $end
$var wire 1 m PC_next [26] $end
$var wire 1 n PC_next [25] $end
$var wire 1 o PC_next [24] $end
$var wire 1 p PC_next [23] $end
$var wire 1 q PC_next [22] $end
$var wire 1 r PC_next [21] $end
$var wire 1 s PC_next [20] $end
$var wire 1 t PC_next [19] $end
$var wire 1 u PC_next [18] $end
$var wire 1 v PC_next [17] $end
$var wire 1 w PC_next [16] $end
$var wire 1 x PC_next [15] $end
$var wire 1 y PC_next [14] $end
$var wire 1 z PC_next [13] $end
$var wire 1 { PC_next [12] $end
$var wire 1 | PC_next [11] $end
$var wire 1 } PC_next [10] $end
$var wire 1 ~ PC_next [9] $end
$var wire 1 !! PC_next [8] $end
$var wire 1 "! PC_next [7] $end
$var wire 1 #! PC_next [6] $end
$var wire 1 $! PC_next [5] $end
$var wire 1 %! PC_next [4] $end
$var wire 1 &! PC_next [3] $end
$var wire 1 '! PC_next [2] $end
$var wire 1 (! PC_next [1] $end
$var wire 1 )! PC_next [0] $end
$var wire 1 *! instruction [31] $end
$var wire 1 +! instruction [30] $end
$var wire 1 ,! instruction [29] $end
$var wire 1 -! instruction [28] $end
$var wire 1 .! instruction [27] $end
$var wire 1 /! instruction [26] $end
$var wire 1 0! instruction [25] $end
$var wire 1 1! instruction [24] $end
$var wire 1 2! instruction [23] $end
$var wire 1 3! instruction [22] $end
$var wire 1 4! instruction [21] $end
$var wire 1 5! instruction [20] $end
$var wire 1 6! instruction [19] $end
$var wire 1 7! instruction [18] $end
$var wire 1 8! instruction [17] $end
$var wire 1 9! instruction [16] $end
$var wire 1 :! instruction [15] $end
$var wire 1 ;! instruction [14] $end
$var wire 1 <! instruction [13] $end
$var wire 1 =! instruction [12] $end
$var wire 1 >! instruction [11] $end
$var wire 1 ?! instruction [10] $end
$var wire 1 @! instruction [9] $end
$var wire 1 A! instruction [8] $end
$var wire 1 B! instruction [7] $end
$var wire 1 C! instruction [6] $end
$var wire 1 D! instruction [5] $end
$var wire 1 E! instruction [4] $end
$var wire 1 F! instruction [3] $end
$var wire 1 G! instruction [2] $end
$var wire 1 H! instruction [1] $end
$var wire 1 I! instruction [0] $end
$var wire 1 J! imm_ext [31] $end
$var wire 1 K! imm_ext [30] $end
$var wire 1 L! imm_ext [29] $end
$var wire 1 M! imm_ext [28] $end
$var wire 1 N! imm_ext [27] $end
$var wire 1 O! imm_ext [26] $end
$var wire 1 P! imm_ext [25] $end
$var wire 1 Q! imm_ext [24] $end
$var wire 1 R! imm_ext [23] $end
$var wire 1 S! imm_ext [22] $end
$var wire 1 T! imm_ext [21] $end
$var wire 1 U! imm_ext [20] $end
$var wire 1 V! imm_ext [19] $end
$var wire 1 W! imm_ext [18] $end
$var wire 1 X! imm_ext [17] $end
$var wire 1 Y! imm_ext [16] $end
$var wire 1 Z! imm_ext [15] $end
$var wire 1 [! imm_ext [14] $end
$var wire 1 \! imm_ext [13] $end
$var wire 1 ]! imm_ext [12] $end
$var wire 1 ^! imm_ext [11] $end
$var wire 1 _! imm_ext [10] $end
$var wire 1 `! imm_ext [9] $end
$var wire 1 a! imm_ext [8] $end
$var wire 1 b! imm_ext [7] $end
$var wire 1 c! imm_ext [6] $end
$var wire 1 d! imm_ext [5] $end
$var wire 1 e! imm_ext [4] $end
$var wire 1 f! imm_ext [3] $end
$var wire 1 g! imm_ext [2] $end
$var wire 1 h! imm_ext [1] $end
$var wire 1 i! imm_ext [0] $end
$var wire 1 j! src_A [31] $end
$var wire 1 k! src_A [30] $end
$var wire 1 l! src_A [29] $end
$var wire 1 m! src_A [28] $end
$var wire 1 n! src_A [27] $end
$var wire 1 o! src_A [26] $end
$var wire 1 p! src_A [25] $end
$var wire 1 q! src_A [24] $end
$var wire 1 r! src_A [23] $end
$var wire 1 s! src_A [22] $end
$var wire 1 t! src_A [21] $end
$var wire 1 u! src_A [20] $end
$var wire 1 v! src_A [19] $end
$var wire 1 w! src_A [18] $end
$var wire 1 x! src_A [17] $end
$var wire 1 y! src_A [16] $end
$var wire 1 z! src_A [15] $end
$var wire 1 {! src_A [14] $end
$var wire 1 |! src_A [13] $end
$var wire 1 }! src_A [12] $end
$var wire 1 ~! src_A [11] $end
$var wire 1 !" src_A [10] $end
$var wire 1 "" src_A [9] $end
$var wire 1 #" src_A [8] $end
$var wire 1 $" src_A [7] $end
$var wire 1 %" src_A [6] $end
$var wire 1 &" src_A [5] $end
$var wire 1 '" src_A [4] $end
$var wire 1 (" src_A [3] $end
$var wire 1 )" src_A [2] $end
$var wire 1 *" src_A [1] $end
$var wire 1 +" src_A [0] $end
$var wire 1 ," RD2 [31] $end
$var wire 1 -" RD2 [30] $end
$var wire 1 ." RD2 [29] $end
$var wire 1 /" RD2 [28] $end
$var wire 1 0" RD2 [27] $end
$var wire 1 1" RD2 [26] $end
$var wire 1 2" RD2 [25] $end
$var wire 1 3" RD2 [24] $end
$var wire 1 4" RD2 [23] $end
$var wire 1 5" RD2 [22] $end
$var wire 1 6" RD2 [21] $end
$var wire 1 7" RD2 [20] $end
$var wire 1 8" RD2 [19] $end
$var wire 1 9" RD2 [18] $end
$var wire 1 :" RD2 [17] $end
$var wire 1 ;" RD2 [16] $end
$var wire 1 <" RD2 [15] $end
$var wire 1 =" RD2 [14] $end
$var wire 1 >" RD2 [13] $end
$var wire 1 ?" RD2 [12] $end
$var wire 1 @" RD2 [11] $end
$var wire 1 A" RD2 [10] $end
$var wire 1 B" RD2 [9] $end
$var wire 1 C" RD2 [8] $end
$var wire 1 D" RD2 [7] $end
$var wire 1 E" RD2 [6] $end
$var wire 1 F" RD2 [5] $end
$var wire 1 G" RD2 [4] $end
$var wire 1 H" RD2 [3] $end
$var wire 1 I" RD2 [2] $end
$var wire 1 J" RD2 [1] $end
$var wire 1 K" RD2 [0] $end
$var wire 1 L" ALU_src_B [31] $end
$var wire 1 M" ALU_src_B [30] $end
$var wire 1 N" ALU_src_B [29] $end
$var wire 1 O" ALU_src_B [28] $end
$var wire 1 P" ALU_src_B [27] $end
$var wire 1 Q" ALU_src_B [26] $end
$var wire 1 R" ALU_src_B [25] $end
$var wire 1 S" ALU_src_B [24] $end
$var wire 1 T" ALU_src_B [23] $end
$var wire 1 U" ALU_src_B [22] $end
$var wire 1 V" ALU_src_B [21] $end
$var wire 1 W" ALU_src_B [20] $end
$var wire 1 X" ALU_src_B [19] $end
$var wire 1 Y" ALU_src_B [18] $end
$var wire 1 Z" ALU_src_B [17] $end
$var wire 1 [" ALU_src_B [16] $end
$var wire 1 \" ALU_src_B [15] $end
$var wire 1 ]" ALU_src_B [14] $end
$var wire 1 ^" ALU_src_B [13] $end
$var wire 1 _" ALU_src_B [12] $end
$var wire 1 `" ALU_src_B [11] $end
$var wire 1 a" ALU_src_B [10] $end
$var wire 1 b" ALU_src_B [9] $end
$var wire 1 c" ALU_src_B [8] $end
$var wire 1 d" ALU_src_B [7] $end
$var wire 1 e" ALU_src_B [6] $end
$var wire 1 f" ALU_src_B [5] $end
$var wire 1 g" ALU_src_B [4] $end
$var wire 1 h" ALU_src_B [3] $end
$var wire 1 i" ALU_src_B [2] $end
$var wire 1 j" ALU_src_B [1] $end
$var wire 1 k" ALU_src_B [0] $end
$var wire 1 l" alu_result [31] $end
$var wire 1 m" alu_result [30] $end
$var wire 1 n" alu_result [29] $end
$var wire 1 o" alu_result [28] $end
$var wire 1 p" alu_result [27] $end
$var wire 1 q" alu_result [26] $end
$var wire 1 r" alu_result [25] $end
$var wire 1 s" alu_result [24] $end
$var wire 1 t" alu_result [23] $end
$var wire 1 u" alu_result [22] $end
$var wire 1 v" alu_result [21] $end
$var wire 1 w" alu_result [20] $end
$var wire 1 x" alu_result [19] $end
$var wire 1 y" alu_result [18] $end
$var wire 1 z" alu_result [17] $end
$var wire 1 {" alu_result [16] $end
$var wire 1 |" alu_result [15] $end
$var wire 1 }" alu_result [14] $end
$var wire 1 ~" alu_result [13] $end
$var wire 1 !# alu_result [12] $end
$var wire 1 "# alu_result [11] $end
$var wire 1 ## alu_result [10] $end
$var wire 1 $# alu_result [9] $end
$var wire 1 %# alu_result [8] $end
$var wire 1 &# alu_result [7] $end
$var wire 1 '# alu_result [6] $end
$var wire 1 (# alu_result [5] $end
$var wire 1 )# alu_result [4] $end
$var wire 1 *# alu_result [3] $end
$var wire 1 +# alu_result [2] $end
$var wire 1 ,# alu_result [1] $end
$var wire 1 -# alu_result [0] $end
$var wire 1 .# read_data [31] $end
$var wire 1 /# read_data [30] $end
$var wire 1 0# read_data [29] $end
$var wire 1 1# read_data [28] $end
$var wire 1 2# read_data [27] $end
$var wire 1 3# read_data [26] $end
$var wire 1 4# read_data [25] $end
$var wire 1 5# read_data [24] $end
$var wire 1 6# read_data [23] $end
$var wire 1 7# read_data [22] $end
$var wire 1 8# read_data [21] $end
$var wire 1 9# read_data [20] $end
$var wire 1 :# read_data [19] $end
$var wire 1 ;# read_data [18] $end
$var wire 1 <# read_data [17] $end
$var wire 1 =# read_data [16] $end
$var wire 1 ># read_data [15] $end
$var wire 1 ?# read_data [14] $end
$var wire 1 @# read_data [13] $end
$var wire 1 A# read_data [12] $end
$var wire 1 B# read_data [11] $end
$var wire 1 C# read_data [10] $end
$var wire 1 D# read_data [9] $end
$var wire 1 E# read_data [8] $end
$var wire 1 F# read_data [7] $end
$var wire 1 G# read_data [6] $end
$var wire 1 H# read_data [5] $end
$var wire 1 I# read_data [4] $end
$var wire 1 J# read_data [3] $end
$var wire 1 K# read_data [2] $end
$var wire 1 L# read_data [1] $end
$var wire 1 M# read_data [0] $end
$var wire 1 N# result [31] $end
$var wire 1 O# result [30] $end
$var wire 1 P# result [29] $end
$var wire 1 Q# result [28] $end
$var wire 1 R# result [27] $end
$var wire 1 S# result [26] $end
$var wire 1 T# result [25] $end
$var wire 1 U# result [24] $end
$var wire 1 V# result [23] $end
$var wire 1 W# result [22] $end
$var wire 1 X# result [21] $end
$var wire 1 Y# result [20] $end
$var wire 1 Z# result [19] $end
$var wire 1 [# result [18] $end
$var wire 1 \# result [17] $end
$var wire 1 ]# result [16] $end
$var wire 1 ^# result [15] $end
$var wire 1 _# result [14] $end
$var wire 1 `# result [13] $end
$var wire 1 a# result [12] $end
$var wire 1 b# result [11] $end
$var wire 1 c# result [10] $end
$var wire 1 d# result [9] $end
$var wire 1 e# result [8] $end
$var wire 1 f# result [7] $end
$var wire 1 g# result [6] $end
$var wire 1 h# result [5] $end
$var wire 1 i# result [4] $end
$var wire 1 j# result [3] $end
$var wire 1 k# result [2] $end
$var wire 1 l# result [1] $end
$var wire 1 m# result [0] $end
$var wire 1 n# result_src [1] $end
$var wire 1 o# result_src [0] $end
$var wire 1 p# imm_src [1] $end
$var wire 1 q# imm_src [0] $end
$var wire 1 r# alu_control [2] $end
$var wire 1 s# alu_control [1] $end
$var wire 1 t# alu_control [0] $end
$var wire 1 u# zero $end
$var wire 1 v# mem_write $end
$var wire 1 w# alu_src $end
$var wire 1 x# reg_write $end
$var wire 1 y# PC_src $end

$scope module IM $end
$var parameter 32 z# ADDR_WIDTH $end
$var parameter 32 {# DATA_WIDTH $end
$var wire 1 |# pc_address [31] $end
$var wire 1 }# pc_address [30] $end
$var wire 1 ~# pc_address [29] $end
$var wire 1 !$ pc_address [28] $end
$var wire 1 "$ pc_address [27] $end
$var wire 1 #$ pc_address [26] $end
$var wire 1 $$ pc_address [25] $end
$var wire 1 %$ pc_address [24] $end
$var wire 1 &$ pc_address [23] $end
$var wire 1 '$ pc_address [22] $end
$var wire 1 ($ pc_address [21] $end
$var wire 1 )$ pc_address [20] $end
$var wire 1 *$ pc_address [19] $end
$var wire 1 +$ pc_address [18] $end
$var wire 1 ,$ pc_address [17] $end
$var wire 1 -$ pc_address [16] $end
$var wire 1 .$ pc_address [15] $end
$var wire 1 /$ pc_address [14] $end
$var wire 1 0$ pc_address [13] $end
$var wire 1 1$ pc_address [12] $end
$var wire 1 2$ pc_address [11] $end
$var wire 1 3$ pc_address [10] $end
$var wire 1 4$ pc_address [9] $end
$var wire 1 5$ pc_address [8] $end
$var wire 1 6$ pc_address [7] $end
$var wire 1 7$ pc_address [6] $end
$var wire 1 8$ pc_address [5] $end
$var wire 1 9$ pc_address [4] $end
$var wire 1 :$ pc_address [3] $end
$var wire 1 ;$ pc_address [2] $end
$var wire 1 <$ pc_address [1] $end
$var wire 1 =$ pc_address [0] $end
$var reg 32 >$ instruction [31:0] $end
$var integer 32 ?$ i $end
$upscope $end

$scope module RF $end
$var parameter 32 @$ DATA_WIDTH $end
$var wire 1 % clk $end
$var wire 1 x# WE3 $end
$var wire 1 6! A1 [4] $end
$var wire 1 7! A1 [3] $end
$var wire 1 8! A1 [2] $end
$var wire 1 9! A1 [1] $end
$var wire 1 :! A1 [0] $end
$var wire 1 1! A2 [4] $end
$var wire 1 2! A2 [3] $end
$var wire 1 3! A2 [2] $end
$var wire 1 4! A2 [1] $end
$var wire 1 5! A2 [0] $end
$var wire 1 >! A3 [4] $end
$var wire 1 ?! A3 [3] $end
$var wire 1 @! A3 [2] $end
$var wire 1 A! A3 [1] $end
$var wire 1 B! A3 [0] $end
$var wire 1 N# WD3 [31] $end
$var wire 1 O# WD3 [30] $end
$var wire 1 P# WD3 [29] $end
$var wire 1 Q# WD3 [28] $end
$var wire 1 R# WD3 [27] $end
$var wire 1 S# WD3 [26] $end
$var wire 1 T# WD3 [25] $end
$var wire 1 U# WD3 [24] $end
$var wire 1 V# WD3 [23] $end
$var wire 1 W# WD3 [22] $end
$var wire 1 X# WD3 [21] $end
$var wire 1 Y# WD3 [20] $end
$var wire 1 Z# WD3 [19] $end
$var wire 1 [# WD3 [18] $end
$var wire 1 \# WD3 [17] $end
$var wire 1 ]# WD3 [16] $end
$var wire 1 ^# WD3 [15] $end
$var wire 1 _# WD3 [14] $end
$var wire 1 `# WD3 [13] $end
$var wire 1 a# WD3 [12] $end
$var wire 1 b# WD3 [11] $end
$var wire 1 c# WD3 [10] $end
$var wire 1 d# WD3 [9] $end
$var wire 1 e# WD3 [8] $end
$var wire 1 f# WD3 [7] $end
$var wire 1 g# WD3 [6] $end
$var wire 1 h# WD3 [5] $end
$var wire 1 i# WD3 [4] $end
$var wire 1 j# WD3 [3] $end
$var wire 1 k# WD3 [2] $end
$var wire 1 l# WD3 [1] $end
$var wire 1 m# WD3 [0] $end
$var reg 32 A$ RD1 [31:0] $end
$var reg 32 B$ RD2 [31:0] $end
$var integer 32 C$ i $end
$upscope $end

$scope module EXT $end
$var parameter 32 D$ IN_WIDTH $end
$var parameter 32 E$ OUT_WIDTH $end
$var wire 1 *! extend_in [24] $end
$var wire 1 +! extend_in [23] $end
$var wire 1 ,! extend_in [22] $end
$var wire 1 -! extend_in [21] $end
$var wire 1 .! extend_in [20] $end
$var wire 1 /! extend_in [19] $end
$var wire 1 0! extend_in [18] $end
$var wire 1 1! extend_in [17] $end
$var wire 1 2! extend_in [16] $end
$var wire 1 3! extend_in [15] $end
$var wire 1 4! extend_in [14] $end
$var wire 1 5! extend_in [13] $end
$var wire 1 6! extend_in [12] $end
$var wire 1 7! extend_in [11] $end
$var wire 1 8! extend_in [10] $end
$var wire 1 9! extend_in [9] $end
$var wire 1 :! extend_in [8] $end
$var wire 1 ;! extend_in [7] $end
$var wire 1 <! extend_in [6] $end
$var wire 1 =! extend_in [5] $end
$var wire 1 >! extend_in [4] $end
$var wire 1 ?! extend_in [3] $end
$var wire 1 @! extend_in [2] $end
$var wire 1 A! extend_in [1] $end
$var wire 1 B! extend_in [0] $end
$var wire 1 p# imm_src [1] $end
$var wire 1 q# imm_src [0] $end
$var reg 32 F$ imm_ext [31:0] $end
$upscope $end

$scope module ALU $end
$var wire 1 j! src_A [31] $end
$var wire 1 k! src_A [30] $end
$var wire 1 l! src_A [29] $end
$var wire 1 m! src_A [28] $end
$var wire 1 n! src_A [27] $end
$var wire 1 o! src_A [26] $end
$var wire 1 p! src_A [25] $end
$var wire 1 q! src_A [24] $end
$var wire 1 r! src_A [23] $end
$var wire 1 s! src_A [22] $end
$var wire 1 t! src_A [21] $end
$var wire 1 u! src_A [20] $end
$var wire 1 v! src_A [19] $end
$var wire 1 w! src_A [18] $end
$var wire 1 x! src_A [17] $end
$var wire 1 y! src_A [16] $end
$var wire 1 z! src_A [15] $end
$var wire 1 {! src_A [14] $end
$var wire 1 |! src_A [13] $end
$var wire 1 }! src_A [12] $end
$var wire 1 ~! src_A [11] $end
$var wire 1 !" src_A [10] $end
$var wire 1 "" src_A [9] $end
$var wire 1 #" src_A [8] $end
$var wire 1 $" src_A [7] $end
$var wire 1 %" src_A [6] $end
$var wire 1 &" src_A [5] $end
$var wire 1 '" src_A [4] $end
$var wire 1 (" src_A [3] $end
$var wire 1 )" src_A [2] $end
$var wire 1 *" src_A [1] $end
$var wire 1 +" src_A [0] $end
$var wire 1 L" src_B [31] $end
$var wire 1 M" src_B [30] $end
$var wire 1 N" src_B [29] $end
$var wire 1 O" src_B [28] $end
$var wire 1 P" src_B [27] $end
$var wire 1 Q" src_B [26] $end
$var wire 1 R" src_B [25] $end
$var wire 1 S" src_B [24] $end
$var wire 1 T" src_B [23] $end
$var wire 1 U" src_B [22] $end
$var wire 1 V" src_B [21] $end
$var wire 1 W" src_B [20] $end
$var wire 1 X" src_B [19] $end
$var wire 1 Y" src_B [18] $end
$var wire 1 Z" src_B [17] $end
$var wire 1 [" src_B [16] $end
$var wire 1 \" src_B [15] $end
$var wire 1 ]" src_B [14] $end
$var wire 1 ^" src_B [13] $end
$var wire 1 _" src_B [12] $end
$var wire 1 `" src_B [11] $end
$var wire 1 a" src_B [10] $end
$var wire 1 b" src_B [9] $end
$var wire 1 c" src_B [8] $end
$var wire 1 d" src_B [7] $end
$var wire 1 e" src_B [6] $end
$var wire 1 f" src_B [5] $end
$var wire 1 g" src_B [4] $end
$var wire 1 h" src_B [3] $end
$var wire 1 i" src_B [2] $end
$var wire 1 j" src_B [1] $end
$var wire 1 k" src_B [0] $end
$var wire 1 r# alu_control [2] $end
$var wire 1 s# alu_control [1] $end
$var wire 1 t# alu_control [0] $end
$var reg 32 G$ alu_result [31:0] $end
$var reg 1 H$ zero $end
$upscope $end

$scope module DM $end
$var parameter 32 I$ DATA_WIDTH $end
$var wire 1 % clk $end
$var wire 1 v# WE $end
$var wire 1 l" address [31] $end
$var wire 1 m" address [30] $end
$var wire 1 n" address [29] $end
$var wire 1 o" address [28] $end
$var wire 1 p" address [27] $end
$var wire 1 q" address [26] $end
$var wire 1 r" address [25] $end
$var wire 1 s" address [24] $end
$var wire 1 t" address [23] $end
$var wire 1 u" address [22] $end
$var wire 1 v" address [21] $end
$var wire 1 w" address [20] $end
$var wire 1 x" address [19] $end
$var wire 1 y" address [18] $end
$var wire 1 z" address [17] $end
$var wire 1 {" address [16] $end
$var wire 1 |" address [15] $end
$var wire 1 }" address [14] $end
$var wire 1 ~" address [13] $end
$var wire 1 !# address [12] $end
$var wire 1 "# address [11] $end
$var wire 1 ## address [10] $end
$var wire 1 $# address [9] $end
$var wire 1 %# address [8] $end
$var wire 1 &# address [7] $end
$var wire 1 '# address [6] $end
$var wire 1 (# address [5] $end
$var wire 1 )# address [4] $end
$var wire 1 *# address [3] $end
$var wire 1 +# address [2] $end
$var wire 1 ,# address [1] $end
$var wire 1 -# address [0] $end
$var wire 1 ," WD [31] $end
$var wire 1 -" WD [30] $end
$var wire 1 ." WD [29] $end
$var wire 1 /" WD [28] $end
$var wire 1 0" WD [27] $end
$var wire 1 1" WD [26] $end
$var wire 1 2" WD [25] $end
$var wire 1 3" WD [24] $end
$var wire 1 4" WD [23] $end
$var wire 1 5" WD [22] $end
$var wire 1 6" WD [21] $end
$var wire 1 7" WD [20] $end
$var wire 1 8" WD [19] $end
$var wire 1 9" WD [18] $end
$var wire 1 :" WD [17] $end
$var wire 1 ;" WD [16] $end
$var wire 1 <" WD [15] $end
$var wire 1 =" WD [14] $end
$var wire 1 >" WD [13] $end
$var wire 1 ?" WD [12] $end
$var wire 1 @" WD [11] $end
$var wire 1 A" WD [10] $end
$var wire 1 B" WD [9] $end
$var wire 1 C" WD [8] $end
$var wire 1 D" WD [7] $end
$var wire 1 E" WD [6] $end
$var wire 1 F" WD [5] $end
$var wire 1 G" WD [4] $end
$var wire 1 H" WD [3] $end
$var wire 1 I" WD [2] $end
$var wire 1 J" WD [1] $end
$var wire 1 K" WD [0] $end
$var wire 1 .# RD [31] $end
$var wire 1 /# RD [30] $end
$var wire 1 0# RD [29] $end
$var wire 1 1# RD [28] $end
$var wire 1 2# RD [27] $end
$var wire 1 3# RD [26] $end
$var wire 1 4# RD [25] $end
$var wire 1 5# RD [24] $end
$var wire 1 6# RD [23] $end
$var wire 1 7# RD [22] $end
$var wire 1 8# RD [21] $end
$var wire 1 9# RD [20] $end
$var wire 1 :# RD [19] $end
$var wire 1 ;# RD [18] $end
$var wire 1 <# RD [17] $end
$var wire 1 =# RD [16] $end
$var wire 1 ># RD [15] $end
$var wire 1 ?# RD [14] $end
$var wire 1 @# RD [13] $end
$var wire 1 A# RD [12] $end
$var wire 1 B# RD [11] $end
$var wire 1 C# RD [10] $end
$var wire 1 D# RD [9] $end
$var wire 1 E# RD [8] $end
$var wire 1 F# RD [7] $end
$var wire 1 G# RD [6] $end
$var wire 1 H# RD [5] $end
$var wire 1 I# RD [4] $end
$var wire 1 J# RD [3] $end
$var wire 1 K# RD [2] $end
$var wire 1 L# RD [1] $end
$var wire 1 M# RD [0] $end
$var integer 32 J$ i $end
$upscope $end

$scope module CU $end
$var wire 1 % clk $end
$var wire 1 C! op [6] $end
$var wire 1 D! op [5] $end
$var wire 1 E! op [4] $end
$var wire 1 F! op [3] $end
$var wire 1 G! op [2] $end
$var wire 1 H! op [1] $end
$var wire 1 I! op [0] $end
$var wire 1 ;! funct3 [2] $end
$var wire 1 <! funct3 [1] $end
$var wire 1 =! funct3 [0] $end
$var wire 1 +! funct7_5 $end
$var wire 1 D! op_5 $end
$var wire 1 u# zero $end
$var wire 1 v# mem_write $end
$var wire 1 w# alu_src $end
$var wire 1 x# reg_write $end
$var wire 1 n# result_src [1] $end
$var wire 1 o# result_src [0] $end
$var wire 1 p# imm_src [1] $end
$var wire 1 q# imm_src [0] $end
$var wire 1 r# alu_control [2] $end
$var wire 1 s# alu_control [1] $end
$var wire 1 t# alu_control [0] $end
$var wire 1 y# PC_src $end
$var wire 1 K$ branch $end
$var wire 1 L$ jump $end
$var wire 1 M$ alu_op [1] $end
$var wire 1 N$ alu_op [0] $end

$scope module MD $end
$var wire 1 % clk $end
$var wire 1 C! op [6] $end
$var wire 1 D! op [5] $end
$var wire 1 E! op [4] $end
$var wire 1 F! op [3] $end
$var wire 1 G! op [2] $end
$var wire 1 H! op [1] $end
$var wire 1 I! op [0] $end
$var reg 1 O$ branch $end
$var reg 1 P$ jump $end
$var reg 1 Q$ mem_write $end
$var reg 1 R$ alu_src $end
$var reg 1 S$ reg_write $end
$var reg 2 T$ result_src [1:0] $end
$var reg 2 U$ imm_src [1:0] $end
$var reg 2 V$ alu_op [1:0] $end
$upscope $end

$scope module AD $end
$var wire 1 % clk $end
$var wire 1 D! op_5 $end
$var wire 1 ;! funct3 [2] $end
$var wire 1 <! funct3 [1] $end
$var wire 1 =! funct3 [0] $end
$var wire 1 +! funct7_5 $end
$var wire 1 M$ alu_op [1] $end
$var wire 1 N$ alu_op [0] $end
$var reg 3 W$ alu_control [2:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
1"
b0 '
b10100000000000100010011 >$
b0 A$
b0 B$
b0 F$
b0 G$
1H$
xO$
xP$
xQ$
xR$
xS$
bx T$
bx U$
bx V$
bx W$
b100000 #
b1000 $
b1000 z#
b100000 {#
b100000 @$
b11001 D$
b100000 E$
b100000 I$
b100000000 ?$
b100000 C$
b10000000000 J$
0G
0F
1E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0)!
0(!
x'!
0&!
0%!
0$!
0#!
0"!
0!!
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
1I!
1H!
0G!
0F!
1E!
0D!
0C!
0B!
1A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
09!
08!
07!
06!
15!
04!
13!
02!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0i!
0h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0u!
0t!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0j!
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0m#
0l#
xk#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
xo#
xn#
xq#
xp#
xt#
xs#
xr#
1u#
xv#
xw#
xx#
xy#
xK$
xL$
xN$
xM$
1&
0%
0=$
0<$
0;$
0:$
09$
08$
07$
06$
05$
04$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
$end
#5000
1!
1%
0S$
b0 U$
0R$
0Q$
b0 T$
0O$
b0 V$
0P$
1S$
1R$
b10 V$
1x#
1w#
0v#
0o#
0n#
0K$
0L$
0y#
1'!
0k#
0N$
1M$
0q#
0p#
b101 F$
b0 W$
1i!
1g!
1g
1e
1k"
1i"
0t#
0s#
0r#
b101 G$
0H$
1-#
1+#
0u#
1m#
1k#
#10000
0!
0%
#15000
1!
1%
0S$
0R$
b0 V$
1S$
1R$
b10 V$
#20000
0"
0!
0&
0%
#25000
1!
1%
0S$
0R$
b0 V$
1S$
1R$
b10 V$
b100 '
0E
1D
0e
1d
0'!
1&!
1;$
b110000000000000110010011 >$
1B!
05!
12!
b1100 F$
0i!
1f!
0g
0d
1c
0k"
1h"
b1100 G$
0-#
1*#
0m#
1j#
#30000
0!
0%
#35000
1!
1%
0S$
0R$
b0 V$
1S$
1R$
b10 V$
b1000 '
1E
1e
1'!
0;$
1:$
b11111111011100011000001110010011 >$
1@!
1:!
19!
15!
14!
02!
11!
10!
1/!
1.!
1-!
1,!
1+!
1*!
b1100 A$
b11111111111111111111111111110111 F$
1i!
1h!
0f!
1e!
1d!
1c!
1b!
1a!
1`!
1_!
1^!
1]!
1\!
1[!
1Z!
1Y!
1X!
1W!
1V!
1U!
1T!
1S!
1R!
1Q!
1P!
1O!
1N!
1M!
1L!
1K!
1J!
1g
1f
1d
1b
1a
1`
1_
1^
1]
1\
1[
1Z
1Y
1X
1W
1V
1U
1T
1S
1R
1Q
1P
1O
1N
1M
1L
1K
1J
1I
1H
1k"
1j"
0h"
1g"
1f"
1e"
1d"
1c"
1b"
1a"
1`"
1_"
1^"
1]"
1\"
1["
1Z"
1Y"
1X"
1W"
1V"
1U"
1T"
1S"
1R"
1Q"
1P"
1O"
1N"
1M"
1L"
1)"
1("
b11 G$
1-#
1,#
0+#
0*#
1m#
1l#
0k#
0j#
#40000
0!
0%
#45000
1!
1%
0S$
0R$
b0 V$
1S$
1R$
b10 V$
b1100 '
0E
0D
1C
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0'!
0&!
1%!
1;$
b1000111110001000110011 >$
1D!
0B!
0A!
1<!
1;!
18!
05!
03!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
b11 A$
b101 B$
b10 F$
b11 W$
0i!
0g!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
1K"
1I"
0g
1e
1d
0k"
0i"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
1t#
1s#
1+"
1*"
0)"
0("
#50000
0!
0%
#55000
1!
1%
0S$
0R$
b0 V$
1S$
b10 V$
0w#
1k"
0j"
1i"
b111 G$
1+#
1k#
b10000 '
1E
0e
0d
1c
1'!
0;$
0:$
19$
b10000011111001010110011 >$
1B!
1=!
08!
04!
13!
b1100 A$
b11 B$
b10 W$
b100 F$
0h!
1g!
1J"
0I"
0f
1e
1j"
0i"
0t#
0+"
0*"
1)"
1("
b0 G$
1H$
0-#
0,#
0+#
1u#
0m#
0l#
0k#
#60000
0!
0%
#65000
1!
1%
0S$
b0 V$
1S$
b10 V$
b10100 '
0E
1D
0e
1d
0'!
1&!
1;$
b10000101000001010110011 >$
0=!
0<!
0;!
09!
18!
b0 A$
b0 W$
0s#
0)"
0("
b11 G$
0H$
1-#
1,#
0u#
1m#
1l#
#70000
0!
0%
#75000
1!
1%
0S$
b0 V$
1S$
b10 V$
b11000 '
1E
1e
1'!
0;$
1:$
b10011100101000100001100011 >$
b11 A$
1+"
1*"
0E!
1C!
0B!
0@!
1>!
15!
14!
10!
b100111 F$
b110 G$
0-#
1+#
1i!
1h!
1d!
1g
1f
1b
0m#
1k#
#80000
0!
0%
#85000
1!
1%
0S$
b0 V$
b10 U$
1O$
b1 V$
0x#
1K$
1p#
1N$
0M$
b1 W$
b110000 F$
0i!
0h!
0g!
1e!
0g
0f
0e
0c
0b
1a
1t#
b0 G$
1H$
0,#
0+#
1u#
1y#
0'!
0%!
1#!
0l#
0k#
b11100 '
0E
0D
0C
1B
1e
1'!
1;$
b10000011010001000110011 >$
1E!
0C!
1@!
0>!
1<!
19!
08!
05!
04!
00!
b1100 A$
b100 F$
1g!
0e!
0d!
0e
0d
1b
0a
0'!
0&!
1$!
0#!
0+"
0*"
1)"
1("
b1001 G$
0H$
1-#
1*#
0u#
0y#
1m#
1j#
#90000
0!
0%
#95000
1!
1%
b0 U$
0O$
b0 V$
1S$
b10 V$
0K$
1x#
0N$
1M$
0p#
b101 W$
1r#
b0 G$
1H$
0-#
0*#
1u#
0m#
0j#
b100000 '
1E
1e
1'!
0;$
0:$
09$
18$
b100000010001100011 >$
0E!
1C!
0@!
1?!
0<!
0:!
09!
18!
03!
b11 A$
b0 B$
b0 W$
b0 F$
0g!
0K"
0J"
0e
0k"
0j"
0t#
0r#
1+"
1*"
0)"
0("
b11 G$
0H$
1-#
1,#
0u#
1m#
1l#
#100000
0!
0%
#105000
1!
1%
0S$
b0 V$
b10 U$
1O$
b1 V$
0x#
1K$
1p#
1N$
0M$
b1 W$
b1000 F$
1f!
1d
1t#
b100100 '
0E
1D
1e
0'!
1&!
1;$
b1010010011 >$
1E!
0D!
0C!
1B!
1@!
0?!
08!
b0 A$
b100000000100 F$
1g!
0f!
1^!
0e
1\
0+"
0*"
b0 G$
1H$
0-#
0,#
1u#
1y#
1|
0m#
0l#
#110000
0!
0%
#115000
1!
1%
b0 U$
0O$
b0 V$
1S$
1R$
b10 V$
0K$
1x#
1w#
0y#
0|
1i"
1`"
0N$
1M$
0p#
b0 F$
b0 W$
b11111111111111111111011111111100 G$
0H$
1+#
1*#
1)#
1(#
1'#
1&#
1%#
1$#
1##
1!#
1~"
1}"
1|"
1{"
1z"
1y"
1x"
1w"
1v"
1u"
1t"
1s"
1r"
1q"
1p"
1o"
1n"
1m"
1l"
0g!
0^!
0u#
1e
0d
0\
1k#
1j#
1i#
1h#
1g#
1f#
1e#
1d#
1c#
1a#
1`#
1_#
1^#
1]#
1\#
1[#
1Z#
1Y#
1X#
1W#
1V#
1U#
1T#
1S#
1R#
1Q#
1P#
1O#
1N#
0i"
0`"
0t#
b0 G$
1H$
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
1u#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
b100000101000 '
1E
1<
0e
1d
1\
1'!
1|
0;$
1:$
12$
b1000111010001000110011 >$
1D!
0B!
1<!
1:!
19!
18!
14!
b11 A$
b101 B$
b10 F$
b101 W$
1h!
1K"
1I"
1f
1j"
1t#
1r#
1+"
1*"
#120000
0!
0%
#125000
1!
1%
0S$
0R$
b0 V$
1S$
b10 V$
0w#
1k"
0j"
1i"
b1 G$
0H$
1-#
0u#
1m#
b100000101100 '
0E
0D
1C
1e
0'!
0&!
1%!
1;$
b10100100000001110110011 >$
1B!
1A!
0<!
0:!
09!
15!
04!
13!
b0 A$
b11 B$
b0 W$
b101 F$
1i!
0h!
1g!
1J"
0I"
1g
0f
0e
0d
1c
1j"
0i"
0t#
0r#
0+"
0*"
b11 G$
1,#
1l#
#130000
0!
0%
#135000
1!
1%
0S$
b0 V$
1S$
b10 V$
b100000110000 '
1E
1e
1'!
0;$
0:$
19$
b1000000001000111000001110110011 >$
1:!
19!
05!
14!
03!
1+!
b1 W$
b11 A$
b101 B$
b10000000010 F$
0i!
1h!
0g!
1_!
0J"
1I"
0g
1f
0e
1]
0j"
1i"
1+"
1*"
1t#
b11111111111111111111111111111110 G$
0-#
1+#
1*#
1)#
1(#
1'#
1&#
1%#
1$#
1##
1"#
1!#
1~"
1}"
1|"
1{"
1z"
1y"
1x"
1w"
1v"
1u"
1t"
1s"
1r"
1q"
1p"
1o"
1n"
1m"
1l"
0m#
1k#
1j#
1i#
1h#
1g#
1f#
1e#
1d#
1c#
1b#
1a#
1`#
1_#
1^#
1]#
1\#
1[#
1Z#
1Y#
1X#
1W#
1V#
1U#
1T#
1S#
1R#
1Q#
1P#
1O#
1N#
#140000
0!
0%
#145000
1!
1%
0S$
b0 V$
1S$
b10 V$
b100000110100 '
0E
1D
1e
0'!
1&!
1;$
b100011100011010101000100011 >$
b11111111111111111111111111111110 A$
0+"
1)"
1("
1'"
1&"
1%"
1$"
1#"
1""
1!"
1~!
1}!
1|!
1{!
1z!
1y!
1x!
1w!
1v!
1u!
1t!
1s!
1r!
1q!
1p!
1o!
1n!
1m!
1l!
1k!
1j!
0E!
0B!
0A!
1>!
1<!
08!
15!
13!
1/!
0+!
b1100 A$
b11111111111111111111111111111110 B$
b101 W$
b1000111 F$
b11111111111111111111111111111001 G$
1-#
0,#
0+#
1i!
1g!
1c!
0_!
0K"
1J"
1H"
1G"
1F"
1E"
1D"
1C"
1B"
1A"
1@"
1?"
1>"
1="
1<"
1;"
1:"
19"
18"
17"
16"
15"
14"
13"
12"
11"
10"
1/"
1."
1-"
1,"
1g
0e
1d
1a
0]
1m#
0l#
0k#
0k"
1j"
1h"
1g"
1f"
1e"
1d"
1c"
1b"
1a"
1`"
1_"
1^"
1]"
1\"
1["
1Z"
1Y"
1X"
1W"
1V"
1U"
1T"
1S"
1R"
1Q"
1P"
1O"
1N"
1M"
1L"
1r#
0*"
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0u!
0t!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0j!
b0 G$
1H$
0-#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
1u#
0m#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
#150000
0!
0%
#155000
1!
1%
0S$
b0 V$
b1 U$
1R$
1Q$
0x#
1w#
1v#
1k"
0h"
0g"
0f"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
1q#
0M$
b0 W$
b1010100 F$
b1 G$
0H$
1-#
0i!
0h!
1e!
0u#
0g
0f
0c
0b
0a
1`
1m#
0k"
0j"
1g"
0t#
0r#
b1100000 G$
0-#
1(#
1'#
0m#
1h#
1g#
b100000111000 '
1E
1e
1'!
0;$
1:$
b110000000000010000100000011 >$
0D!
1A!
0@!
0>!
0:!
09!
05!
04!
03!
10!
b0 A$
b0 B$
b1100010 F$
1h!
0g!
0e!
1d!
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
1f
0e
1c
1j"
0i"
0g"
1f"
0)"
0("
b1100010 G$
1,#
1l#
#160000
0!
0%
#165000
1!
1%
b0 U$
0R$
0Q$
1S$
1R$
b1 T$
0v#
1x#
1o#
0l#
0h#
0g#
0q#
b1100000 F$
0h!
0f
0j"
b1100000 G$
0,#
b100000111100 '
0E
0D
0C
0B
1A
1e
0'!
0&!
0%!
0$!
1#!
1;$
b10100010000010010110011 >$
1E!
1D!
1B!
0A!
1?!
0<!
19!
15!
13!
00!
0/!
b101 A$
b11 B$
b101 F$
1i!
1g!
0d!
0c!
1K"
1J"
1g
0e
0d
0c
1a
0`
1k"
1i"
0f"
0e"
1+"
1)"
b1010 G$
1,#
1*#
0(#
0'#
#170000
0!
0%
#175000
1!
1%
0S$
0R$
b0 T$
1S$
b10 V$
0w#
0o#
1l#
1j#
1j"
0i"
1M$
b1000 G$
0,#
0l#
b100001000000 '
1E
1e
1'!
0;$
0:$
09$
08$
17$
b100000000000000111101111 >$
1G!
1F!
0E!
1C!
1A!
0?!
09!
05!
03!
12!
b0 A$
b1000 F$
0i!
0g!
1f!
0g
0e
1d
0+"
0)"
b11 G$
1-#
1,#
0*#
1m#
1l#
0j#
#180000
0!
0%
#185000
1!
1%
0S$
b0 V$
1S$
b11 U$
b10 T$
1P$
1n#
1L$
1y#
0'!
1&!
0m#
0l#
1k#
1g#
1b#
1q#
1p#
0M$
b100001000100 '
0E
1D
1e
0k#
1j#
1'!
1;$
b100000000000100010011 >$
0G!
0F!
1E!
0D!
0C!
0B!
15!
02!
b0 B$
b100000000000 F$
0f!
1^!
0K"
0J"
0d
0\
1[
0&!
0|
1{
0k"
0j"
b0 G$
1H$
0-#
0,#
1u#
#190000
0!
0%
#195000
1!
1%
0S$
b0 U$
b0 T$
0P$
1S$
1R$
b10 V$
0n#
0L$
1w#
0y#
0'!
1&!
1|
0{
0j#
0g#
0b#
1`"
1M$
0q#
0p#
b1 F$
b100000000000 G$
0H$
1"#
1i!
0^!
